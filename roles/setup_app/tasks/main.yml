---
- name: Make sure that target directory exists
  become: yes
  file:
    path: /srv/apps/{{ app_name}}
    state: directory
    owner: www-data
    group: www-data

- name: Install nvm
  git:
    repo: https://github.com/creationix/nvm.git
    dest: ~/.nvm
    version: v0.32.0

- name: Source nvm in ~/.profile
  lineinfile:
    dest: ~/.profile
    line: "source ~/.nvm/nvm.sh"
    create: yes

- name: Install node  
  command: bash -lc "nvm install 8"

- name: Install yarn
  command: bash -lc "npm install -g yarn@1.*"

- name: Install bower
  command: bash -lc "npm install -g bower"

- name: Clone repository
  git:
    repo: "{{ repo_url }}"
    dest: "~/{{ app_name }}"
    key_file: /home/ubuntu/.ssh/deployment
    accept_hostkey: yes
    version: "{{ repo_tag }}"
    force: yes
    update: yes

- name: Copy application config file specified by env_source
  copy:
    src: "{{ env_source }}"
    dest: ~/{{ app_name }}/.env.production
  when: env_source is defined
  tags:
    - update_env

- name: Install npm requirements
  command: bash -lc "yarn"
  args:
    chdir: "/home/ubuntu/{{ app_name }}"

# - name: Install npm requirements(until yarn is stable)
#   command: bash -lc "npm install"
#   args:
#     chdir: "/home/ubuntu/{{ app_name }}"

- name: Check that bower.json exists
  stat:
    path: "/home/ubuntu/{{ app_name }}/bower.json"
  register: bower_stats

- name: Install bower requirements
  command: bash -lc "bower install"
  args:
    chdir: "/home/ubuntu/{{ app_name }}"
  when: bower_stats.stat.exists == True

- name: Trigger build
  command: bash -lc "npm run build"
  args:
    chdir: "/home/ubuntu/{{ app_name }}"

- name: Copy app
  command: bash -lc "cp -r /home/ubuntu/{{ app_name }}/build/* /srv/apps/{{ app_name }}"
  become: yes

- name: Change app permissions
  become: yes
  file:
    path: /srv/apps/{{ app_name}}
    state: directory
    owner: www-data
    group: www-data
    recurse: yes
